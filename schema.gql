# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Product {
  _id: ID!
  name: String!
  price: Float!
  image: String!
  description: String
}

type Address {
  street: String
  houseNumber: String
  zip: String!
  city: String!
  country: String!
  misc: String
}

type ProductOrder {
  product: Product!
  quantity: Int!
}

type Employee {
  _id: ID!
  firstName: String!
  lastName: String!
  updatedAt: String
  createdAt: String!
  email: String!
  employeeNumber: Int!
}

type EmployeeShort {
  _id: ID!
  firstName: String!
  lastName: String!
}

type CustomerShort {
  _id: ID!
  firstName: String!
  lastName: String!
}

type Order {
  _id: ID
  status: String!
  totalPrice: Float!
  address: Address!
  updatedAt: String!
  createdAt: String!
  items: [ProductOrder!]!
  employee: EmployeeShort
  customer: CustomerShort!
}

type OrderStatusHistory {
  _id: ID
  status: String!
  updatedAt: String!
  createdAt: String!
  order: Order!
}

type Customer {
  _id: ID!
  firstName: String!
  lastName: String!
  updatedAt: String
  createdAt: String!
  addresses: [Address]!
  firstOrder: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  products(limit: Int = 50): [Product!]!
  product(id: Int!): Product!
  orders(offset: Int = 0, limit: Int = 50): [Order!]!
  order(id: ID!): Order!
  customers: [Customer!]!
  customer(id: Int!): Customer!
  employees(limit: Int = null): [Employee!]!
  employee(id: Int!): Employee!
  orderStatusHistories(offset: Int = 0, limit: Int = 50): [OrderStatusHistory!]!
  orderStatusHistory(orderID: ID!): [OrderStatusHistory!]!
}

type Mutation {
  assignEmployee(orderID: ID!, employeeID: ID!): Order!
  createOrder(order: CreateOrderInput!): Order!
  updateStatus(orderID: ID!, status: String!): Order!
  createDocument(status: CreateOrderStatusHistoryInput!): OrderStatusHistory!
}

input CreateOrderInput {
  totalPrice: Float!
  address: AddressInput!
  items: [ProductOrderInput!]!
  employee: PersonInput
  customer: PersonInput!
}

input AddressInput {
  street: String
  houseNumber: String
  zip: String!
  city: String!
  country: String!
  misc: String
}

input ProductOrderInput {
  product: ID!
  quantity: Float!
}

input PersonInput {
  _id: ID!
  firstName: String!
  lastName: String!
}

input CreateOrderStatusHistoryInput {
  status: String!
  order: ID!
}